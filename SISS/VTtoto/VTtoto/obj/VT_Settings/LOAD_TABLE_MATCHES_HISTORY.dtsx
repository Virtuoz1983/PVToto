<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/8/2016 12:06:15 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="DP385"
  DTS:CreatorName="SOFTSERVE\vteresch"
  DTS:DTSID="{B270C70E-4FA7-44AD-8BA7-23B8E2B5ECCC}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.5583.0"
  DTS:LocaleID="1058"
  DTS:ObjectName="LOAD_TABLE_MATCHES_HISTORY"
  DTS:PackageType="5"
  DTS:ProtectionLevel="0"
  DTS:VersionBuild="14"
  DTS:VersionGUID="{617D94E5-F556-4F4F-B3E6-CF09CE8EF4B0}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[HTTP Connection Manager]"
      DTS:CreationName="HTTP"
      DTS:DTSID="{538C513B-0B46-4AE2-A588-1C56174E0CE9}"
      DTS:ObjectName="HTTP Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="http://www.marathontotoservice.com/sttot/pbstyle/SttotTime16.aspx?id=-3593&amp;GMT=+3">
          <DTS:HttpConnection
            DTS:ServerURL="http://www.marathontotoservice.com/sttot/pbstyle/SttotTime16.aspx?id=-3593&amp;GMT=+3">
            <DTS:Property
              DTS:Name="ServerPassword"
              Sensitive="1"></DTS:Property>
            <DTS:Property
              DTS:Name="ProxyPassword"
              Sensitive="1"></DTS:Property>
          </DTS:HttpConnection>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[TM]"
      DTS:CreationName="FILE"
      DTS:DTSID="{2A329F29-5DF8-4D45-B19F-9A8CE0DFE9C4}"
      DTS:ObjectName="TM">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="1"
          DTS:ConnectionString="D:\TotoProjectGH\PVToto\WorkFolder\TM" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="SSIS.Pipeline.3"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{4AADD434-0FCD-4907-A81C-722FDC35C454}"
      DTS:ExecutableType="SSIS.Pipeline.3"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\Get data from HTML"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;8"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Get data from HTML"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.Net;
using System.IO;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    /// 

    string Internal_URL;

    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        // Declare variables.        
        Internal_URL = "http://www.marathontotoservice.com/sttot/pbstyle/SttotTime16.aspx?id=-3593&GMT=+3";
        //Boolean fireAgainFlag = true;
        //Boolean StatusIWantToCheck = false;
        //string SomethingIWantToCheck = "";

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */

        string sReturnString;
        string str_tmp;
        // The WebRequest.
        HttpWebRequest oWebrequest;
        oWebrequest = (HttpWebRequest)WebRequest.Create(Internal_URL);
        //oWebrequest.Credentials = System.Net.CredentialCache.DefaultCredentials;
        //oWebrequest.UserAgent = "My SSIS Server Name";
        //oWebrequest.Method = "POST";
        //oWebrequest.Timeout = (1000 * 60 * 10);
        //oWebrequest.ProtocolVersion = HttpVersion.Version10;

        // The WebResponse.
        HttpWebResponse oWResponse;
        oWResponse = (HttpWebResponse)oWebrequest.GetResponse();
        Stream s = oWResponse.GetResponseStream();
        StreamReader sr = new StreamReader(s);

        sReturnString = sr.ReadLine();

         while (sReturnString != null)
        {
            if (sReturnString.Contains("sttot-row"))
            {
                sReturnString = sr.ReadLine();

                // get data from <table> 
                // date
                sReturnString = sReturnString.Substring(sReturnString.IndexOf("\">") + 2, sReturnString.Length - sReturnString.IndexOf("\">") - 2);
                str_tmp = sReturnString.Substring(0, sReturnString.IndexOf("</td>") - 5);
                // num_match
                sReturnString = sReturnString.Substring(sReturnString.IndexOf("\">") + 2, sReturnString.Length - sReturnString.IndexOf("\">") - 2);
                str_tmp = sReturnString.Substring(0, sReturnString.IndexOf("</td>") );
                // name_match
                sReturnString = sReturnString.Substring(sReturnString.IndexOf("\">") + 2, sReturnString.Length - sReturnString.IndexOf("\">") - 2);
                str_tmp = sReturnString.Substring(0, sReturnString.IndexOf("</td>") );
            }

            //Output0Buffer.AddRow();
            //Output0Buffer.varname = sReturnString.ToString();
            sReturnString = sr.ReadLine();
        }

        sr.Close();      
        oWResponse.Close();

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Decimal vLD
    {
        set
        {
            this[0] = value;
        }
    }
    public bool vLD_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal v32
    {
        set
        {
            this[1] = value;
        }
    }
    public bool v32_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal v31
    {
        set
        {
            this[2] = value;
        }
    }
    public bool v31_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal v30
    {
        set
        {
            this[3] = value;
        }
    }
    public bool v30_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal v21
    {
        set
        {
            this[4] = value;
        }
    }
    public bool v21_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal v20
    {
        set
        {
            this[5] = value;
        }
    }
    public bool v20_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal v10
    {
        set
        {
            this[6] = value;
        }
    }
    public bool v10_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal v33
    {
        set
        {
            this[7] = value;
        }
    }
    public bool v33_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal v22
    {
        set
        {
            this[8] = value;
        }
    }
    public bool v22_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal v11
    {
        set
        {
            this[9] = value;
        }
    }
    public bool v11_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal v00
    {
        set
        {
            this[10] = value;
        }
    }
    public bool v00_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal v23
    {
        set
        {
            this[11] = value;
        }
    }
    public bool v23_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal v13
    {
        set
        {
            this[12] = value;
        }
    }
    public bool v13_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal v03
    {
        set
        {
            this[13] = value;
        }
    }
    public bool v03_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal v12
    {
        set
        {
            this[14] = value;
        }
    }
    public bool v12_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal v02
    {
        set
        {
            this[15] = value;
        }
    }
    public bool v02_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal v01
    {
        set
        {
            this[16] = value;
        }
    }
    public bool v01_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String varresult
    {
        set
        {
            this[17] = value;
        }
    }
    public bool varresult_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String varname
    {
        set
        {
            this[18] = value;
        }
    }
    public bool varname_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 nummatch
    {
        set
        {
            this[19] = value;
        }
    }
    public bool nummatch_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 tirag
    {
        set
        {
            this[20] = value;
        }
    }
    public bool tirag_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_27e0965380e94d35b6ad6b28e8b832a3.Properties.Settings.get_Default():SC_27e0965380e94d35b6ad6b28e8b832a3.Properties.Sett" +
    "ings")]

namespace SC_27e0965380e94d35b6ad6b28e8b832a3.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_27e0965380e94d35b6ad6b28e8b832a3.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_27e0965380e94d35b6ad6b28e8b832a3.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_27e0965380e94d35b6ad6b28e8b832a3.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_27e0965380e94d35b6ad6b28e8b832a3.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_27e0965380e94d35b6ad6b28e8b832a3.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_27e0965380e94d35b6ad6b28e8b832a3</msb:CodeName>
		<msb:DisplayName>SC_27e0965380e94d35b6ad6b28e8b832a3</msb:DisplayName>
		<msb:ProjectId>{38E428A0-1C73-444F-A999-37889FC85D51}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_27e0965380e94d35b6ad6b28e8b832a3.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:Breakpoint Include="296c407e2be142949eb02cf1102576be">
			<msb:FileName>main.cs</msb:FileName>
			<msb:LineNumber>138</msb:LineNumber>
			<msb:ColumnNumber>9</msb:ColumnNumber>
			<msb:Enabled>True</msb:Enabled>
			<msb:ConditionType>1</msb:ConditionType>
			<msb:Condition></msb:Condition>
			<msb:Language>C#</msb:Language>
			<msb:HitCountType>1</msb:HitCountType>
			<msb:HitCountTarget>1</msb:HitCountTarget>
		</msb:Breakpoint>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_27e0965380e94d35b6ad6b28e8b832a3")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_27e0965380e94d35b6ad6b28e8b832a3")]
[assembly: AssemblyCopyright("Copyright @  2016")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_27e0965380e94d35b6ad6b28e8b832a3.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{3C3BBEA9-B998-4131-970D-D0A566084E11}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_27e0965380e94d35b6ad6b28e8b832a3</RootNamespace>
    <AssemblyName>SC_27e0965380e94d35b6ad6b28e8b832a3</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_27e0965380e94d35b6ad6b28e8b832a3.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAH0adVcAAAAAAAAAAOAAAiELAQsAACIAAAAIAAAAAAAAvkAA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHBAAABLAAAAAGAAAAgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxCAAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAAgEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
QAAAAAAAAEgAAAACAAUA0CYAAKAZAAABAAAAAAAAABgmAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAH4CKA0AAAoCAnM4AAAGfQEAAAQCAnM5AAAGfQIAAAQqBipu
AnsDAAAELBICewMAAARvNgAABgIUfQMAAAQqAAATMAUASQAAAAEAABEWCisuBAaUDgRyAQAAcCgO
AAAKMxkCBQaaAgQGlCgPAAAKDgRzCgAABn0DAAAEBhdYCgYDMs4CbwUAAAYCbwIAAAYCKAMAAAYq
BipKAigRAAAKAnITAABwfQQAAAQqHgIoEgAACioAABMwBQAgAQAAAgAAEQJ7BAAABCgTAAAKdBgA
AAELB28UAAAKdBoAAAEMCG8VAAAKDQlzFgAAChMEEQRvFwAACgo40wAAAAZyuAAAcG8YAAAKObsA
AAARBG8XAAAKCgYGcswAAHBvGQAAChhYBm8aAAAKBnLMAABwbxkAAApZGFlvGwAACgoGFgZy0gAA
cG8ZAAAKG1lvGwAACiYGBnLMAABwbxkAAAoYWAZvGgAACgZyzAAAcG8ZAAAKWRhZbxsAAAoKBhYG
ctIAAHBvGQAACm8bAAAKJgYGcswAAHBvGQAAChhYBm8aAAAKBnLMAABwbxkAAApZGFlvGwAACgoG
FgZy0gAAcG8ZAAAKbxsAAAomEQRvFwAACgoGOif///8RBG8cAAAKCG8dAAAKKh4CKAEAAAYqKgID
BAUoHgAACio6AhYDjAcAAAEoHwAACipaAywIAhYoIAAACipy3gAAcHMhAAAKejoCFwOMBwAAASgf
AAAKKloDLAgCFyggAAAKKnLeAABwcyEAAAp6OgIYA4wHAAABKB8AAAoqWgMsCAIYKCAAAAoqct4A
AHBzIQAACno6AhkDjAcAAAEoHwAACipaAywIAhkoIAAACipy3gAAcHMhAAAKejoCGgOMBwAAASgf
AAAKKloDLAgCGiggAAAKKnLeAABwcyEAAAp6OgIbA4wHAAABKB8AAAoqWgMsCAIbKCAAAAoqct4A
AHBzIQAACno6AhwDjAcAAAEoHwAACipaAywIAhwoIAAACipy3gAAcHMhAAAKejoCHQOMBwAAASgf
AAAKKloDLAgCHSggAAAKKnLeAABwcyEAAAp6OgIeA4wHAAABKB8AAAoqWgMsCAIeKCAAAAoqct4A
AHBzIQAACno+Ah8JA4wHAAABKB8AAAoqXgMsCQIfCSggAAAKKnLeAABwcyEAAAp6PgIfCgOMBwAA
ASgfAAAKKl4DLAkCHwooIAAACipy3gAAcHMhAAAKej4CHwsDjAcAAAEoHwAACipeAywJAh8LKCAA
AAoqct4AAHBzIQAACno+Ah8MA4wHAAABKB8AAAoqXgMsCQIfDCggAAAKKnLeAABwcyEAAAp6PgIf
DQOMBwAAASgfAAAKKl4DLAkCHw0oIAAACipy3gAAcHMhAAAKej4CHw4DjAcAAAEoHwAACipeAywJ
Ah8OKCAAAAoqct4AAHBzIQAACno+Ah8PA4wHAAABKB8AAAoqXgMsCQIfDyggAAAKKnLeAABwcyEA
AAp6PgIfEAOMBwAAASgfAAAKKl4DLAkCHxAoIAAACipy3gAAcHMhAAAKeioCHxEDKB8AAAoqXgMs
CQIfESggAAAKKnLeAABwcyEAAAp6KgIfEgMoHwAACipeAywJAh8SKCAAAAoqct4AAHBzIQAACno+
Ah8TA4wgAAABKB8AAAoqXgMsCQIfEyggAAAKKnLeAABwcyEAAAp6PgIfFAOMIAAAASgfAAAKKl4D
LAkCHxQoIAAACipy3gAAcHMhAAAKeh4CKCIAAAoqHgIoIwAACioeAigkAAAKKjoCKCUAAAoCA30F
AAAEKjoCKCUAAAoCA30GAAAEKh4CKCUAAAoqAAAAEzACAC0AAAADAAARfgcAAAQtIHJ7AQBw0AcA
AAIoJwAACm8oAAAKcykAAAoKBoAHAAAEfgcAAAQqGn4IAAAEKh4CgAgAAAQqGn4JAAAEKi5zPwAA
BoAJAAAEKh4CKCwAAAoqAAAAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVz
b3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwg
UHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVS
ZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAz
MTkAAAAABQBsAAAAsAoAACN+AAAcCwAAqAoAACNTdHJpbmdzAAAAAMQVAADwAQAAI1VTALQXAAAQ
AAAAI0dVSUQAAADEFwAA3AEAACNCbG9iAAAAAAAAAAIAAAFXFaIBCQEAAAD6JTMAFgAAAQAAACcA
AAAIAAAACQAAAEAAAAA0AAAALAAAAA8AAAADAAAAAwAAAC0AAAAuAAAAAQAAAAQAAAABAAAAAAAK
AAEAAAAAAAYA7wDOAAYA/wDOAAoAHAEVAQ4AOAEjARIAmQHOAAYAqAHOAAoA+gEVAQoApwWWBQoA
2AXDBQoAtQabBgoA4AbOBgoA9wbOBgoAFAfOBgoAMwfOBgoATAfOBgoAZQfOBgoAgAfOBgoAmwfO
BgoAtAfOBgoA7QfNBwoADQjNBwYAbAjOAA4AngiTCA4AsAiTCA4AvwiTCA4A1wiTCAoA8QjnCAoA
CgnnCAoAFwnnCAoAKwkVAQoAbwkVAQoAiQkVAQoAogmPCQoAvwkVAQoAxAkVAQoA6AnOBg4AFAr+
CQ4ALQr+CQoAQgrNBwAAAAABAAAAAAABAAEAAQAQADIAAAAFAAEAAQABABAAQAAAAAgABAAGAAEA
EABLAAAACQAFAAoAAQAQAFkAAAANAAUAOAABABAAZQAAAA0ABgA5AAAAEABvAHkADQAHADoAAAEQ
AKgAeQARAAkAPgAGAFkAEwAGAGUAFwAGAEsAHwABANYBLwABAIYFZgABAIYFZgARALcFcAARAOQF
dAARACgGkgBQIAAAAACGGFABGwABAHAgAAAAAMYBVgEbAAEAciAAAAAAgQBkARsAAQCQIAAAAADG
ALYBIwABAOUgAAAAAMYBwgEbAAUA5yAAAAAAxgDjARsABQD6IAAAAADGAO4BGwAFAAQhAAAAAMYA
wgEbAAUAMCIAAAAAhhhQARsABQA4IgAAAACGGFABMgAFAEMiAAAAAIYIAgI8AAgAUiIAAAAAhggK
AkIACQBpIgAAAACGCBkCPAAKAHgiAAAAAIYIIQJCAAsAjyIAAAAAhggwAjwADACeIgAAAACGCDgC
QgANALUiAAAAAIYIRwI8AA4AxCIAAAAAhghPAkIADwDbIgAAAACGCF4CPAAQAOoiAAAAAIYIZgJC
ABEAASMAAAAAhgh1AjwAEgAQIwAAAACGCH0CQgATACcjAAAAAIYIjAI8ABQANiMAAAAAhgiUAkIA
FQBNIwAAAACGCKMCPAAWAFwjAAAAAIYIqwJCABcAcyMAAAAAhgi6AjwAGACCIwAAAACGCMICQgAZ
AJkjAAAAAIYI0QI8ABoAqSMAAAAAhgjZAkIAGwDBIwAAAACGCOgCPAAcANEjAAAAAIYI8AJCAB0A
6SMAAAAAhgj/AjwAHgD5IwAAAACGCAcDQgAfABEkAAAAAIYIFgM8ACAAISQAAAAAhggeA0IAIQA5
JAAAAACGCC0DPAAiAEkkAAAAAIYINQNCACMAYSQAAAAAhghEAzwAJABxJAAAAACGCEwDQgAlAIkk
AAAAAIYIWwM8ACYAmSQAAAAAhghjA0IAJwCxJAAAAACGCHIDPAAoAMEkAAAAAIYIegNCACkA2SQA
AAAAhgiJA0cAKgDkJAAAAACGCJcDQgArAPwkAAAAAIYIrANHACwAByUAAAAAhgi4A0IALQAfJQAA
AACGCMsDTAAuAC8lAAAAAIYI2ANCAC8ARyUAAAAAhgjsA0wAMABXJQAAAACGCPYDQgAxAG8lAAAA
AIYABwQbADIAdyUAAAAAhgAOBBsAMgB/JQAAAACGAB0EUQAyAIclAAAAAIYYUAFqADIAliUAAAAA
hhhQAWoAMwClJQAAAACDGFABGwA0ALAlAAAAAJMI9AV4ADQA6SUAAAAAkwgIBn0ANADwJQAAAACT
CBQGggA0APglAAAAAJYIOAaWADUACyYAAAAAhhhQARsANQD/JQAAAACRGF0KIgE1AAAAAQBMBgAA
AgBUBgAAAwBeBgAABABmBgAAAQBwBgAAAgB3BgAAAwBmBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCL
BgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAA
AQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCL
BgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAA
AQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCLBgAAAQCL
BgAAAQCRBgAAAQCRBgAAAQCLBlEAUAFHAFkAUAFHAGEAUAFHAGkAUAFHAHEAUAFHAHkAUAFHAIEA
UAFHAIkAUAFHAJEAUAFHAJkAUAFHAKEAUAFMAKkAUAEbAAkAUAEbAAkATwigAAkAWwinALEAUAEb
AAkA4wEbAAkA7gEbALkAqQi2ALkAywi8AMkA+AjBAOEAUAHGAOkAIgnMAPEAMgnQAPEAOwnVAPEA
QwnaAPEATgneAOkAWAkbAMkAWAkbABEAUAEyABEAXgnwABEAZwlMAPkAUAFHABEABwQbABEADgQb
ABEAHQRRABkAUAEbAAkBUAEbABEB1gn2ABEB8Qn/AEEAUAEFASkBUAESATkBUAEbACEAUAEbAC4A
GwCXAS4AYwC9AS4ACwAmAS4AEwBuAS4AIwCXAS4AKwCXAS4AMwBuAS4AOwCdAS4AQwCXAS4AWwC0
AWMAgwCxAOMAMwGxACEBWwGxAGkFUwEZAYkFUwEZAa0A5AANAQQAAQAHACsACAAtAAAAKQRVAAAA
LQRaAAAAOARVAAAAPARaAAAARwRVAAAASwRaAAAAVgRVAAAAWgRaAAAAZQRVAAAAaQRaAAAAdARV
AAAAeARaAAAAgwRVAAAAhwRaAAAAkgRVAAAAlgRaAAAAoQRVAAAApQRaAAAAsARVAAAAtARaAAAA
vwRVAAAAwwRaAAAAzgRVAAAA0gRaAAAA3QRVAAAA4QRaAAAA7ARVAAAA8ARaAAAA+wRVAAAA/wRa
AAAACgVVAAAADgVaAAAAGQVVAAAAHQVaAAAAKAVeAAAAMgVaAAAAQwVeAAAASwVaAAAAWgViAAAA
YwVaAAAAcwViAAAAeQVaAAAApwWIAAAAIAaNAAAARAabAAEACwADAAEADAAFAAEADQAHAAEADgAJ
AAEADwALAAEAEAANAAEAEQAPAAEAEgARAAEAEwATAAEAFAAVAAEAFQAXAAEAFgAZAAEAFwAbAAEA
GAAdAAEAGQAfAAEAGgAhAAEAGwAjAAEAHAAlAAEAHQAnAAEAHgApAAEAHwArAAEAIAAtAAEAIQAv
AAEAIgAxAAEAIwAzAAEAJAA1AAEAJQA3AAEAJgA5AAEAJwA7AAEAKAA9AAEAKQA/AAEAKgBBAAEA
KwBDAAEALABFAAEALQBHAAEALgBJAAEALwBLAAEAMABNAAEAMQBPAAEAMgBRAAEAMwBTAAEANABV
AAIAOwBXAAIAPABZAAEAPQBZAAIAPgBbAASAAAABAAAAiRfOagAAAAAAACsIAAALAAAAAAAAAAAA
AAABALEAAAAAAAQAAAAAAAAAAAAAAAoADAEAAAAABAAAAAAAAAAAAAAACgAVAQAAAAALAAAAAAAA
AAAAAAABAHgBAAAAAAAAAAABAAAAZAoAAAAAADxNb2R1bGU+AFNDXzI3ZTA5NjUzODBlOTRkMzVi
NmFkNmIyOGU4YjgzMmEzLmRsbABVc2VyQ29tcG9uZW50AFNjcmlwdE1haW4AT3V0cHV0MEJ1ZmZl
cgBDb25uZWN0aW9ucwBWYXJpYWJsZXMAUmVzb3VyY2VzAFNDXzI3ZTA5NjUzODBlOTRkMzViNmFk
NmIyOGU4YjgzMmEzLlByb3BlcnRpZXMAU2V0dGluZ3MATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNj
cmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBTY3JpcHRDb21wb25lbnQAU2Ny
aXB0QnVmZmVyAG1zY29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBw
bGljYXRpb25TZXR0aW5nc0Jhc2UALmN0b3IARmluaXNoT3V0cHV0cwBNYXJrT3V0cHV0c0Zpbmlz
aGVkAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFBpcGVsaW5lQnVmZmVyAE91dHB1
dE5hbWVNYXAAUHJpbWVPdXRwdXQAQ3JlYXRlTmV3T3V0cHV0Um93cwBJbnRlcm5hbF9VUkwAUHJl
RXhlY3V0ZQBQb3N0RXhlY3V0ZQBEZWNpbWFsAHNldF92TEQAc2V0X3ZMRF9Jc051bGwAc2V0X3Yz
MgBzZXRfdjMyX0lzTnVsbABzZXRfdjMxAHNldF92MzFfSXNOdWxsAHNldF92MzAAc2V0X3YzMF9J
c051bGwAc2V0X3YyMQBzZXRfdjIxX0lzTnVsbABzZXRfdjIwAHNldF92MjBfSXNOdWxsAHNldF92
MTAAc2V0X3YxMF9Jc051bGwAc2V0X3YzMwBzZXRfdjMzX0lzTnVsbABzZXRfdjIyAHNldF92MjJf
SXNOdWxsAHNldF92MTEAc2V0X3YxMV9Jc051bGwAc2V0X3YwMABzZXRfdjAwX0lzTnVsbABzZXRf
djIzAHNldF92MjNfSXNOdWxsAHNldF92MTMAc2V0X3YxM19Jc051bGwAc2V0X3YwMwBzZXRfdjAz
X0lzTnVsbABzZXRfdjEyAHNldF92MTJfSXNOdWxsAHNldF92MDIAc2V0X3YwMl9Jc051bGwAc2V0
X3YwMQBzZXRfdjAxX0lzTnVsbABzZXRfdmFycmVzdWx0AHNldF92YXJyZXN1bHRfSXNOdWxsAHNl
dF92YXJuYW1lAHNldF92YXJuYW1lX0lzTnVsbABzZXRfbnVtbWF0Y2gAc2V0X251bW1hdGNoX0lz
TnVsbABzZXRfdGlyYWcAc2V0X3RpcmFnX0lzTnVsbABBZGRSb3cAU2V0RW5kT2ZSb3dzZXQARW5k
T2ZSb3dzZXQAdkxEAHZMRF9Jc051bGwAdjMyAHYzMl9Jc051bGwAdjMxAHYzMV9Jc051bGwAdjMw
AHYzMF9Jc051bGwAdjIxAHYyMV9Jc051bGwAdjIwAHYyMF9Jc051bGwAdjEwAHYxMF9Jc051bGwA
djMzAHYzM19Jc051bGwAdjIyAHYyMl9Jc051bGwAdjExAHYxMV9Jc051bGwAdjAwAHYwMF9Jc051
bGwAdjIzAHYyM19Jc051bGwAdjEzAHYxM19Jc051bGwAdjAzAHYwM19Jc051bGwAdjEyAHYxMl9J
c051bGwAdjAyAHYwMl9Jc051bGwAdjAxAHYwMV9Jc051bGwAdmFycmVzdWx0AHZhcnJlc3VsdF9J
c051bGwAdmFybmFtZQB2YXJuYW1lX0lzTnVsbABudW1tYXRjaABudW1tYXRjaF9Jc051bGwAdGly
YWcAdGlyYWdfSXNOdWxsAFBhcmVudENvbXBvbmVudABTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNl
TWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNv
dXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBD
dWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE91dHB1dHMAT3V0cHV0
SURzAEJ1ZmZlcnMAT3V0cHV0TWFwAEJ1ZmZlcgBCdWZmZXJDb2x1bW5JbmRleGVzAHZhbHVlAENv
bXBvbmVudABTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0
ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3Jp
cHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29t
cGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRB
dHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmli
dXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZp
Y2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlB
dHRyaWJ1dGUAU0NfMjdlMDk2NTM4MGU5NGQzNWI2YWQ2YjI4ZThiODMyYTMAR2V0T3V0cHV0SUQA
R2V0Q29sdW1uSW5kZXhlcwBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBT
eXN0ZW0uTmV0AFdlYlJlcXVlc3QAQ3JlYXRlAEh0dHBXZWJSZXF1ZXN0AFdlYlJlc3BvbnNlAEdl
dFJlc3BvbnNlAEh0dHBXZWJSZXNwb25zZQBTeXN0ZW0uSU8AU3RyZWFtAEdldFJlc3BvbnNlU3Ry
ZWFtAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAFJlYWRMaW5lAFN0cmluZwBDb250YWlucwBJbmRl
eE9mAGdldF9MZW5ndGgAU3Vic3RyaW5nAENsb3NlAHNldF9JdGVtAFNldE51bGwASW52YWxpZE9w
ZXJhdGlvbkV4Y2VwdGlvbgBJbnQzMgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFz
c2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRl
AC5jY3RvcgBTQ18yN2UwOTY1MzgwZTk0ZDM1YjZhZDZiMjhlOGI4MzJhMy5Qcm9wZXJ0aWVzLlJl
c291cmNlcy5yZXNvdXJjZXMAAAARTwB1AHQAcAB1AHQAIAAwAACAo2gAdAB0AHAAOgAvAC8AdwB3
AHcALgBtAGEAcgBhAHQAaABvAG4AdABvAHQAbwBzAGUAcgB2AGkAYwBlAC4AYwBvAG0ALwBzAHQA
dABvAHQALwBwAGIAcwB0AHkAbABlAC8AUwB0AHQAbwB0AFQAaQBtAGUAMQA2AC4AYQBzAHAAeAA/
AGkAZAA9AC0AMwA1ADkAMwAmAEcATQBUAD0AKwAzAAETcwB0AHQAbwB0AC0AcgBvAHcAAQUiAD4A
AAs8AC8AdABkAD4AAICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8A
dAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2
AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAABx
UwBDAF8AMgA3AGUAMAA5ADYANQAzADgAMABlADkANABkADMANQBiADYAYQBkADYAYgAyADgAZQA4
AGIAOAAzADIAYQAzAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAA
AABTQtEmIgzYS5ukj+kUxTxOAAiJhF3NgIDMkQi3elxWGTTgiQMGEhQDBhIYAyAAAQMGEhALIAQB
CB0IHRIVEhkCBg4JIAMBEhUdCBIZBSABAREdBCABAQIEIAEBDgQgAQEIAyAAAgQoABEdAygAAgMo
AA4DKAAIAwYSBQUgAQESBQMGEiEDBhIlBAAAEiEEAAASJQUAAQESJQQIABIhBAgAEiUDBhIgBAAA
EiAECAASIAYAAggSGQ4FIAEdCAgDBwEIBAEAAAAFAAESXQ4EIAASZQQgABJtBSABARJtAyAADgQg
AQIOBCABCA4DIAAIBSACDggICwcFDhJhEmkSbRJxBSACAQgcCAABEoCJEYCNBSAAEoCRByACAQ4S
gJEEBwESIQYgAQERgJkIAQACAAAAAAADAAABRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4w
AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NDXzI3ZTA5NjUz
ODBlOTRkMzViNmFkNmIyOGU4YjgzMmEzAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTYAAAgB
AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwGYQAAAAAAAAAAAAACuQAAAACAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAoEAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAA
AAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
ALADAAAAAAAAAAAAALADNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQDOaokXAAABAM5qiRc/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sAQQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAADsAgAAAQAwADAAMAAwADAANABi
ADAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAAUwBDAF8AMgA3AGUA
MAA5ADYANQAzADgAMABlADkANABkADMANQBiADYAYQBkADYAYgAyADgAZQA4AGIAOAAzADIAYQAz
AAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADYAMAAyADUALgAyADcA
MwA0ADIAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMgA3AGUAMAA5
ADYANQAzADgAMABlADkANABkADMANQBiADYAYQBkADYAYgAyADgAZQA4AGIAOAAzADIAYQAzAC4A
ZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBn
AGgAdAAgAEAAIAAgADIAMAAxADYAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBDAF8AMgA3AGUAMAA5ADYANQAzADgAMABlADkANABkADMANQBiADYAYQBkADYAYgAy
ADgAZQA4AGIAOAAzADIAYQAzAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAQwBfADIANwBlADAAOQA2ADUAMwA4ADAAZQA5ADQAZAAzADUAYgA2AGEAZAA2AGIAMgA4
AGUAOABiADgAMwAyAGEAMwAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4ANgAwADIANQAuADIANwAzADQAMgAAAAAASAAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4ANgAwADIANQAuADIANwAzADQAMgAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADAMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_27e0965380e94d35b6ad6b28e8b832a3</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="1">
                    <arrayElement
                      dataType="System.String">&lt;SOAP-ENV:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"&gt;
&lt;SOAP-ENV:Body&gt;
&lt;a1:ScriptBreakpointInfo id="ref-1" xmlns:a1="http://schemas.microsoft.com/clr/nsassem/Microsoft.SqlServer.VSTAHosting/Microsoft.SqlServer.VSTAScriptingLib%2C%20Version%3D11.0.0.0%2C%20Culture%3Dneutral%2C%20PublicKeyToken%3D89845dcd8080cc91"&gt;
&lt;Enabled&gt;true&lt;/Enabled&gt;
&lt;File id="ref-3"&gt;main.cs&lt;/File&gt;
&lt;FileLine&gt;138&lt;/FileLine&gt;
&lt;FileColumn&gt;9&lt;/FileColumn&gt;
&lt;/a1:ScriptBreakpointInfo&gt;
&lt;/SOAP-ENV:Body&gt;
&lt;/SOAP-ENV:Envelope&gt;
</arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">daa8135de0c4498bdd99a7e8b8e53f15</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[vLD]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[vLD]"
                      name="vLD"
                      precision="9"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v32]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v32]"
                      name="v32"
                      precision="9"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v31]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v31]"
                      name="v31"
                      precision="9"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v30]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v30]"
                      name="v30"
                      precision="9"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v21]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v21]"
                      name="v21"
                      precision="9"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v20]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v20]"
                      name="v20"
                      precision="9"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v10]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v10]"
                      name="v10"
                      precision="9"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v33]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v33]"
                      name="v33"
                      precision="9"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v22]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v22]"
                      name="v22"
                      precision="9"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v11]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v11]"
                      name="v11"
                      precision="9"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v00]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v00]"
                      name="v00"
                      precision="9"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v23]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v23]"
                      name="v23"
                      precision="9"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v13]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v13]"
                      name="v13"
                      precision="9"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v03]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v03]"
                      name="v03"
                      precision="9"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v12]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v12]"
                      name="v12"
                      precision="9"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v02]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v02]"
                      name="v02"
                      precision="9"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v01]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[v01]"
                      name="v01"
                      precision="9"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[var_result]"
                      dataType="wstr"
                      length="10"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[var_result]"
                      name="var_result" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[var_name]"
                      dataType="wstr"
                      length="200"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[var_name]"
                      name="var_name" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[num_match]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[num_match]"
                      name="num_match" />
                    <outputColumn
                      refId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[tirag]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Get data from HTML.Outputs[Output 0].Columns[tirag]"
                      name="tirag" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="153,42"
          Id="Package\Data Flow Task"
          TopLeft="352,138" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="177,44"
          Id="Package\Data Flow Task\Get data from HTML"
          TopLeft="442,73" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>